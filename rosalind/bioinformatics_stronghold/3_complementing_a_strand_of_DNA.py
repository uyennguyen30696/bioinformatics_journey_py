# In DNA strings, symbols 'A' and 'T' are complements of each other, as are 'C' and 'G'.
# The reverse complement of a DNA string s is the string sc formed by reversing the symbols of s, then taking the complement of each symbol (e.g., the reverse complement of "GTCA" is "TGAC").

# Given: A DNA string s of length at most 1000 bp.
# Return: The reverse complement sc of s.

dna = 'TAGTCGCGGGCCAGCCCCGTGCTTCCATGCGAACAAAAGATGGGCCTGTCTACTAGCCTGTCGTTTCTATTATCTTGAGCGAAGGGACATTTACGGAAAAAGCAGTACCGATTGAAGCGTTAGAATCCCACCAATCGGATGTATGGTGCTCGCGGCCCCCTGTAGACCGAAATTAGATCATCTTGTGACCCGGGGGGAGTGTGACGAATGAACGATGCAGTCCCGTGCTCGAGGTGTGGCCCACTCCGCGGCATAAGGTTTGGCTTCTATCTAGTACAAGTGTTCGTGGTCAATACATTACTCTCGTTTGTAAAAGAGCCTATTATTTATTTCTTCCTGCCAGTGCGTGCGAACTGCGATTTGACGAAAACCCCGCAGCAACGTATAGGGATCGGAGCCTAATTAGACCTTACGTTTTGCTCCAGTGGCGAAGCCCTCCAACGAACAGGGGTCGTTCAGCATTCGGGTAGGTCTACGAGCCAGACTACCTCACAAAGCCGAAAGGCTTCGACCAAGTGTATCGTTATGGCCAAAAACGCCCGGACTGCGTTTGCTTCGACTCAATACAGTATGCCTTGAAAACACGGGCATCTTCTCGAGCGGCAGTAATGCTAAGGCCTTAAGCATGCCGTGCATCCAGAAAACGGAGCTGTTCGGTGACCACCGTTCTCGAGTGTTGAACCGGGTCAGATCCTCGTACGACACCGTCAGGGGGAGCTTTCCGGGCACGTTGTCTTGTATCAACGTATTCCGATGCACCGGCCAGGCCTAGAACGGAGGTGCTAATAGTAGTCCTACGGAACGCCAGACGACAACGGCAAAACAAGACGTCTAACGTCCGGCCCTTACAAAGTAGT'

# [::-1] means [begin:end:step], -1 means backwards
reverse = dna[::-1]
reverseList = [nuc for nuc in reverse]

comp = []
def compliment(reverseList):
    for n in reverseList:
        if n == 'A':
            comp.append('T')
        elif n == 'T':
            comp.append('A')
        elif n == 'G':
            comp.append('C')
        elif n == 'C':
            comp.append('G')
    return ''.join(comp)

print (compliment(reverseList))
